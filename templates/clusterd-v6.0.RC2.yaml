{{- if .Values.volcano.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: clusterd
  namespace: mindx-dl
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-clusterd-role
rules:
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "list", "update", "watch", "patch" ]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "create", "update", "list", "watch", "delete"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["nodes/status"]
    verbs: ["get", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "delete", "create", "update"]
  - apiGroups: ["batch.volcano.sh"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "update", "delete"]
  - apiGroups: ["scheduling.incubator.k8s.io", "scheduling.volcano.sh"]
    resources: ["podgroups"]
    verbs: ["list", "watch", "update", "get"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-clusterd-rolebinding
subjects:
  - kind: ServiceAccount
    name: clusterd
    namespace: mindx-dl
roleRef:
  kind: ClusterRole
  name: pods-clusterd-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: coordination.k8s.io/v1
kind: Lease
metadata:
  namespace: mindx-dl
  name: cluster-info-collector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clusterd
  namespace: mindx-dl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clusterd
  template:
    metadata:
      labels:
        app: clusterd
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    spec:
      #nodeSelector:
      #  masterselector: dls-master-node
      serviceAccountName: clusterd
      containers:
        - name: clusterd
          image: {{ include "ascend-clusterd.fullimage" . }}
          resources:
            requests:
              memory: 1Gi
              cpu: 1000m
            limits:
              memory: 1Gi
              cpu: 1000m
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          imagePullPolicy: IfNotPresent
          command: [ "/bin/bash", "-c", "--"]
          args: [ "/usr/local/bin/clusterd -logFile=/var/log/mindx-dl/clusterd/cluster-info.log -logLevel=0" ]
          securityContext:
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: log-clusterd
              mountPath: /var/log/mindx-dl/clusterd
            - name: localtime
              mountPath: /etc/localtime
              readOnly: true
      volumes:
        - name: log-clusterd
          hostPath:
            path: /var/log/mindx-dl/clusterd
            type: DirectoryOrCreate
        - name: localtime
          hostPath:
            path: /etc/localtime
{{- end }}
